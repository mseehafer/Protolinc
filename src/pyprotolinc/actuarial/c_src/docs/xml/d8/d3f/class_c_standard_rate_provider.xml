<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="d8/d3f/class_c_standard_rate_provider" kind="class" language="C++" prot="public">
    <compoundname>CStandardRateProvider</compoundname>
    <basecompoundref refid="d1/d72/class_c_base_rate_provider" prot="public" virt="non-virtual">CBaseRateProvider</basecompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d8/d3f/class_c_standard_rate_provider_1a72157d6069576027387c6f797b4b2647" prot="protected" static="no" mutable="no">
        <type>shared_ptr&lt; double[]&gt;</type>
        <definition>shared_ptr&lt;double[]&gt; CStandardRateProvider::values</definition>
        <argsstring></argsstring>
        <name>values</name>
        <qualifiedname>CStandardRateProvider::values</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="132" column="16" bodyfile="modules/providers.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d3f/class_c_standard_rate_provider_1a179eb9feb09d1074c473e0de6b20a8fe" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CStandardRateProvider::has_values</definition>
        <argsstring></argsstring>
        <name>has_values</name>
        <qualifiedname>CStandardRateProvider::has_values</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="133" column="10" bodyfile="modules/providers.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d3f/class_c_standard_rate_provider_1a5d550eed35328b3ce60365d13ac888d8" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CStandardRateProvider::number_values</definition>
        <argsstring></argsstring>
        <name>number_values</name>
        <qualifiedname>CStandardRateProvider::number_values</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="134" column="9" bodyfile="modules/providers.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d3f/class_c_standard_rate_provider_1a768527cc86392ed4352458b5a1834f8d" prot="protected" static="no" mutable="no">
        <type>int</type>
        <definition>int CStandardRateProvider::capacity</definition>
        <argsstring></argsstring>
        <name>capacity</name>
        <qualifiedname>CStandardRateProvider::capacity</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="135" column="9" bodyfile="modules/providers.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d3f/class_c_standard_rate_provider_1aeec03dbe2841358ad794ec8bb2bb68b4" prot="protected" static="no" mutable="no">
        <type>vector&lt; int &gt;</type>
        <definition>vector&lt;int&gt; CStandardRateProvider::shape_vec</definition>
        <argsstring></argsstring>
        <name>shape_vec</name>
        <qualifiedname>CStandardRateProvider::shape_vec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="137" column="12" bodyfile="modules/providers.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d3f/class_c_standard_rate_provider_1ac1e5d1349cb6526553d2140e76da1698" prot="protected" static="no" mutable="no">
        <type>vector&lt; int &gt;</type>
        <definition>vector&lt;int&gt; CStandardRateProvider::strides</definition>
        <argsstring></argsstring>
        <name>strides</name>
        <qualifiedname>CStandardRateProvider::strides</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="138" column="12" bodyfile="modules/providers.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d3f/class_c_standard_rate_provider_1a089b06da1a7e37ef4f1935c4065e7ac9" prot="protected" static="no" mutable="no">
        <type>vector&lt; int &gt;</type>
        <definition>vector&lt;int&gt; CStandardRateProvider::offsets</definition>
        <argsstring></argsstring>
        <name>offsets</name>
        <qualifiedname>CStandardRateProvider::offsets</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="139" column="12" bodyfile="modules/providers.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/d3f/class_c_standard_rate_provider_1a040d55e960338247fc5b1f5cd6b76f1f" prot="protected" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int CStandardRateProvider::dimensions</definition>
        <argsstring></argsstring>
        <name>dimensions</name>
        <qualifiedname>CStandardRateProvider::dimensions</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="140" column="18" bodyfile="modules/providers.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d8/d3f/class_c_standard_rate_provider_1a834336daf6fa95283743522e5ce46bfb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CStandardRateProvider::set_strides</definition>
        <argsstring>()</argsstring>
        <name>set_strides</name>
        <qualifiedname>CStandardRateProvider::set_strides</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="143" column="10" bodyfile="modules/providers.h" bodystart="630" bodyend="640"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/d3f/class_c_standard_rate_provider_1ac646a183aac86597d78a836fa4d502ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CStandardRateProvider::CStandardRateProvider</definition>
        <argsstring>()</argsstring>
        <name>CStandardRateProvider</name>
        <qualifiedname>CStandardRateProvider::CStandardRateProvider</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="146" column="5" bodyfile="modules/providers.h" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/class_c_standard_rate_provider_1a306fdfdcbb7a5686e40474ab0b70e61d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual CStandardRateProvider::~CStandardRateProvider</definition>
        <argsstring>()</argsstring>
        <name>~CStandardRateProvider</name>
        <qualifiedname>CStandardRateProvider::~CStandardRateProvider</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="147" column="13" bodyfile="modules/providers.h" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/class_c_standard_rate_provider_1aa10fb6a2a0b0494d5a2cbd7296a39fe5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>shared_ptr&lt; <ref refid="d1/d72/class_c_base_rate_provider" kindref="compound">CBaseRateProvider</ref> &gt;</type>
        <definition>shared_ptr&lt; CBaseRateProvider &gt; CStandardRateProvider::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <qualifiedname>CStandardRateProvider::clone</qualifiedname>
        <reimplements refid="d1/d72/class_c_base_rate_provider_1aeda1720df79d3712be9961f16b9f205f">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="149" column="16" bodyfile="modules/providers.h" bodystart="244" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/class_c_standard_rate_provider_1adf0638bfc877cbf9b29451bdb129ce5a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CStandardRateProvider::get_dimension</definition>
        <argsstring>() const</argsstring>
        <name>get_dimension</name>
        <qualifiedname>CStandardRateProvider::get_dimension</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="151" column="9" bodyfile="modules/providers.h" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/class_c_standard_rate_provider_1abc6dd22faa4e4c642f8cbb9463c753d5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CStandardRateProvider::get_capacity</definition>
        <argsstring>() const</argsstring>
        <name>get_capacity</name>
        <qualifiedname>CStandardRateProvider::get_capacity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="152" column="9" bodyfile="modules/providers.h" bodystart="152" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/class_c_standard_rate_provider_1a7267ee97011cd991c221dedcc58f2c1f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int CStandardRateProvider::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>CStandardRateProvider::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="153" column="9" bodyfile="modules/providers.h" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/class_c_standard_rate_provider_1abbba31b11f526409cce54f20a1c523ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CStandardRateProvider::get_values</definition>
        <argsstring>(double *ext_vals) const</argsstring>
        <name>get_values</name>
        <qualifiedname>CStandardRateProvider::get_values</qualifiedname>
        <param>
          <type>double *</type>
          <declname>ext_vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="155" column="10" bodyfile="modules/providers.h" bodystart="155" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/class_c_standard_rate_provider_1aa84712042b2e00a32a5f239944f33de9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CStandardRateProvider::set_values</definition>
        <argsstring>(vector&lt; int &gt; &amp;shape_vec_in, vector&lt; int &gt; &amp;offsets_in, double *ext_vals)</argsstring>
        <name>set_values</name>
        <qualifiedname>CStandardRateProvider::set_values</qualifiedname>
        <param>
          <type>vector&lt; int &gt; &amp;</type>
          <declname>shape_vec_in</declname>
        </param>
        <param>
          <type>vector&lt; int &gt; &amp;</type>
          <declname>offsets_in</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ext_vals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="160" column="10" bodyfile="modules/providers.h" bodystart="273" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/class_c_standard_rate_provider_1ac3708f1798d789854bd78715bdab38e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void CStandardRateProvider::add_risk_factor</definition>
        <argsstring>(CRiskFactors rf)</argsstring>
        <name>add_risk_factor</name>
        <qualifiedname>CStandardRateProvider::add_risk_factor</qualifiedname>
        <reimplements refid="d1/d72/class_c_base_rate_provider_1a2640fc18faa82cba089cf6dda1c8cf9a">add_risk_factor</reimplements>
        <param>
          <type>CRiskFactors</type>
          <declname>rf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="162" column="10" bodyfile="modules/providers.h" bodystart="162" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/class_c_standard_rate_provider_1ab12a199bd63c8659f7f8747ff29cb17e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>string</type>
        <definition>string CStandardRateProvider::to_string</definition>
        <argsstring>() const</argsstring>
        <name>to_string</name>
        <qualifiedname>CStandardRateProvider::to_string</qualifiedname>
        <reimplements refid="d1/d72/class_c_base_rate_provider_1a493254710446e340043750c39952d0eb">to_string</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="176" column="12" bodyfile="modules/providers.h" bodystart="357" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/class_c_standard_rate_provider_1afbddaa32d2166978b8896151258501f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double CStandardRateProvider::get_rate</definition>
        <argsstring>(const vector&lt; int &gt; &amp;indices) const</argsstring>
        <name>get_rate</name>
        <qualifiedname>CStandardRateProvider::get_rate</qualifiedname>
        <reimplements refid="d1/d72/class_c_base_rate_provider_1afd46d3bd7df8875a49a84075a7e5008b">get_rate</reimplements>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="178" column="12" bodyfile="modules/providers.h" bodystart="178" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/class_c_standard_rate_provider_1a01db7e61c7b97ca905b9b861cdf96c05" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CStandardRateProvider::get_rates</definition>
        <argsstring>(double *out_array, size_t length, const vector&lt; int * &gt; &amp;indices) const</argsstring>
        <name>get_rates</name>
        <qualifiedname>CStandardRateProvider::get_rates</qualifiedname>
        <reimplements refid="d1/d72/class_c_base_rate_provider_1ac3a28af16eb16c22535621e1e06f7595">get_rates</reimplements>
        <param>
          <type>double *</type>
          <declname>out_array</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const vector&lt; int * &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="204" column="18" bodyfile="modules/providers.h" bodystart="204" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/class_c_standard_rate_provider_1a0b96999a26d96f9a9418f3bce9f769ee" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>shared_ptr&lt; <ref refid="d8/d3f/class_c_standard_rate_provider" kindref="compound">CStandardRateProvider</ref> &gt;</type>
        <definition>shared_ptr&lt; CStandardRateProvider &gt; CStandardRateProvider::slice</definition>
        <argsstring>(const vector&lt; int &gt; &amp;indices) const</argsstring>
        <name>slice</name>
        <qualifiedname>CStandardRateProvider::slice</qualifiedname>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
<para>Given a vector of indexes take only the dimensions where the values is &quot;-1&quot; in full. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Given a vector of indexes take only the dimensions where the values is &quot;-1&quot; in full</para>
        </inbodydescription>
        <location file="modules/providers.h" line="237" column="24" bodyfile="modules/providers.h" bodystart="373" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="d8/d3f/class_c_standard_rate_provider_1aff99ff2193473d10464e73b0354c876e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void CStandardRateProvider::slice_into</definition>
        <argsstring>(const vector&lt; int &gt; &amp;indices, CBaseRateProvider *other) const</argsstring>
        <name>slice_into</name>
        <qualifiedname>CStandardRateProvider::slice_into</qualifiedname>
        <reimplements refid="d1/d72/class_c_base_rate_provider_1ad48a6abf6d03441beedf641b839fa0bc">slice_into</reimplements>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="d1/d72/class_c_base_rate_provider" kindref="compound">CBaseRateProvider</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="241" column="10" bodyfile="modules/providers.h" bodystart="508" bodyend="628"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>CBaseRateProvider</label>
        <link refid="d1/d72/class_c_base_rate_provider"/>
      </node>
      <node id="1">
        <label>CStandardRateProvider</label>
        <link refid="d8/d3f/class_c_standard_rate_provider"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>CBaseRateProvider</label>
        <link refid="d1/d72/class_c_base_rate_provider"/>
      </node>
      <node id="1">
        <label>CStandardRateProvider</label>
        <link refid="d8/d3f/class_c_standard_rate_provider"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="modules/providers.h" line="128" column="1" bodyfile="modules/providers.h" bodystart="129" bodyend="242"/>
    <listofallmembers>
      <member refid="d8/d3f/class_c_standard_rate_provider_1ac3708f1798d789854bd78715bdab38e6" prot="public" virt="virtual"><scope>CStandardRateProvider</scope><name>add_risk_factor</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1a768527cc86392ed4352458b5a1834f8d" prot="protected" virt="non-virtual"><scope>CStandardRateProvider</scope><name>capacity</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1aa10fb6a2a0b0494d5a2cbd7296a39fe5" prot="public" virt="virtual"><scope>CStandardRateProvider</scope><name>clone</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1ac646a183aac86597d78a836fa4d502ac" prot="public" virt="non-virtual"><scope>CStandardRateProvider</scope><name>CStandardRateProvider</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1a040d55e960338247fc5b1f5cd6b76f1f" prot="protected" virt="non-virtual"><scope>CStandardRateProvider</scope><name>dimensions</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1abc6dd22faa4e4c642f8cbb9463c753d5" prot="public" virt="non-virtual"><scope>CStandardRateProvider</scope><name>get_capacity</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1adf0638bfc877cbf9b29451bdb129ce5a" prot="public" virt="non-virtual"><scope>CStandardRateProvider</scope><name>get_dimension</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1afbddaa32d2166978b8896151258501f2" prot="public" virt="virtual"><scope>CStandardRateProvider</scope><name>get_rate</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1a01db7e61c7b97ca905b9b861cdf96c05" prot="public" virt="virtual"><scope>CStandardRateProvider</scope><name>get_rates</name></member>
      <member refid="d1/d72/class_c_base_rate_provider_1ad03cbad78c88038d6645405a054ac2bf" prot="public" virt="non-virtual"><scope>CStandardRateProvider</scope><name>get_risk_factors</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1abbba31b11f526409cce54f20a1c523ac" prot="public" virt="non-virtual"><scope>CStandardRateProvider</scope><name>get_values</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1a179eb9feb09d1074c473e0de6b20a8fe" prot="protected" virt="non-virtual"><scope>CStandardRateProvider</scope><name>has_values</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1a5d550eed35328b3ce60365d13ac888d8" prot="protected" virt="non-virtual"><scope>CStandardRateProvider</scope><name>number_values</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1a089b06da1a7e37ef4f1935c4065e7ac9" prot="protected" virt="non-virtual"><scope>CStandardRateProvider</scope><name>offsets</name></member>
      <member refid="d1/d72/class_c_base_rate_provider_1a0f28a513e31b1d6e12077a15830d6be8" prot="protected" virt="non-virtual"><scope>CStandardRateProvider</scope><name>risk_factors</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1a834336daf6fa95283743522e5ce46bfb" prot="protected" virt="non-virtual"><scope>CStandardRateProvider</scope><name>set_strides</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1aa84712042b2e00a32a5f239944f33de9" prot="public" virt="non-virtual"><scope>CStandardRateProvider</scope><name>set_values</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1aeec03dbe2841358ad794ec8bb2bb68b4" prot="protected" virt="non-virtual"><scope>CStandardRateProvider</scope><name>shape_vec</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1a7267ee97011cd991c221dedcc58f2c1f" prot="public" virt="non-virtual"><scope>CStandardRateProvider</scope><name>size</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1a0b96999a26d96f9a9418f3bce9f769ee" prot="public" virt="virtual"><scope>CStandardRateProvider</scope><name>slice</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1aff99ff2193473d10464e73b0354c876e" prot="public" virt="virtual"><scope>CStandardRateProvider</scope><name>slice_into</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1ac1e5d1349cb6526553d2140e76da1698" prot="protected" virt="non-virtual"><scope>CStandardRateProvider</scope><name>strides</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1ab12a199bd63c8659f7f8747ff29cb17e" prot="public" virt="virtual"><scope>CStandardRateProvider</scope><name>to_string</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1a72157d6069576027387c6f797b4b2647" prot="protected" virt="non-virtual"><scope>CStandardRateProvider</scope><name>values</name></member>
      <member refid="d1/d72/class_c_base_rate_provider_1a13043f980594af17065853df0edba6a1" prot="public" virt="virtual"><scope>CStandardRateProvider</scope><name>~CBaseRateProvider</name></member>
      <member refid="d8/d3f/class_c_standard_rate_provider_1a306fdfdcbb7a5686e40474ab0b70e61d" prot="public" virt="virtual"><scope>CStandardRateProvider</scope><name>~CStandardRateProvider</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
