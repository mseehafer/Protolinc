<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="d0/dfc/class_c_constant_rate_provider" kind="class" language="C++" prot="public">
    <compoundname>CConstantRateProvider</compoundname>
    <basecompoundref refid="d1/d72/class_c_base_rate_provider" prot="public" virt="non-virtual">CBaseRateProvider</basecompoundref>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d0/dfc/class_c_constant_rate_provider_1a31b0efd91d6f05a51a713852bf9a5e66" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double CConstantRateProvider::val</definition>
        <argsstring></argsstring>
        <name>val</name>
        <qualifiedname>CConstantRateProvider::val</qualifiedname>
        <initializer>= 0.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="85" column="12" bodyfile="modules/providers.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d0/dfc/class_c_constant_rate_provider_1a86eb352e6e96e3f58eca0148c281e96a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CConstantRateProvider::CConstantRateProvider</definition>
        <argsstring>(double rate)</argsstring>
        <name>CConstantRateProvider</name>
        <qualifiedname>CConstantRateProvider::CConstantRateProvider</qualifiedname>
        <param>
          <type>double</type>
          <declname>rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="88" column="5" bodyfile="modules/providers.h" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="d0/dfc/class_c_constant_rate_provider_1ae8a814a984b80c2542b0834f46cda53b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual CConstantRateProvider::~CConstantRateProvider</definition>
        <argsstring>()</argsstring>
        <name>~CConstantRateProvider</name>
        <qualifiedname>CConstantRateProvider::~CConstantRateProvider</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="93" column="13" bodyfile="modules/providers.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="d0/dfc/class_c_constant_rate_provider_1aadb2facf713091f863cd9fc990bb8ea9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double CConstantRateProvider::get_rate</definition>
        <argsstring>(const vector&lt; int &gt; &amp;indices) const</argsstring>
        <name>get_rate</name>
        <qualifiedname>CConstantRateProvider::get_rate</qualifiedname>
        <reimplements refid="d1/d72/class_c_base_rate_provider_1afd46d3bd7df8875a49a84075a7e5008b">get_rate</reimplements>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="95" column="12" bodyfile="modules/providers.h" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="d0/dfc/class_c_constant_rate_provider_1a45d64417a6e005b311af9b036f736f92" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void CConstantRateProvider::get_rates</definition>
        <argsstring>(double *out_array, size_t length, const vector&lt; int * &gt; &amp;indices) const</argsstring>
        <name>get_rates</name>
        <qualifiedname>CConstantRateProvider::get_rates</qualifiedname>
        <reimplements refid="d1/d72/class_c_base_rate_provider_1ac3a28af16eb16c22535621e1e06f7595">get_rates</reimplements>
        <param>
          <type>double *</type>
          <declname>out_array</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>const vector&lt; int * &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="100" column="10" bodyfile="modules/providers.h" bodystart="100" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="d0/dfc/class_c_constant_rate_provider_1ad60530a109967264a6e55ee5870a8f5e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>string</type>
        <definition>string CConstantRateProvider::to_string</definition>
        <argsstring>() const override</argsstring>
        <name>to_string</name>
        <qualifiedname>CConstantRateProvider::to_string</qualifiedname>
        <reimplements refid="d1/d72/class_c_base_rate_provider_1a493254710446e340043750c39952d0eb">to_string</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="108" column="12" bodyfile="modules/providers.h" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="d0/dfc/class_c_constant_rate_provider_1ab73ff4c094a40bfbf3d504b36dedc1c8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void CConstantRateProvider::slice_into</definition>
        <argsstring>(const vector&lt; int &gt; &amp;indices, CBaseRateProvider *other) const override</argsstring>
        <name>slice_into</name>
        <qualifiedname>CConstantRateProvider::slice_into</qualifiedname>
        <reimplements refid="d1/d72/class_c_base_rate_provider_1ad48a6abf6d03441beedf641b839fa0bc">slice_into</reimplements>
        <param>
          <type>const vector&lt; int &gt; &amp;</type>
          <declname>indices</declname>
        </param>
        <param>
          <type><ref refid="d1/d72/class_c_base_rate_provider" kindref="compound">CBaseRateProvider</ref> *</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="113" column="10" bodyfile="modules/providers.h" bodystart="113" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="d0/dfc/class_c_constant_rate_provider_1af773f550cc46a4b6ced6fe0fa4d94f69" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>shared_ptr&lt; <ref refid="d1/d72/class_c_base_rate_provider" kindref="compound">CBaseRateProvider</ref> &gt;</type>
        <definition>shared_ptr&lt; CBaseRateProvider &gt; CConstantRateProvider::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <qualifiedname>CConstantRateProvider::clone</qualifiedname>
        <reimplements refid="d1/d72/class_c_base_rate_provider_1aeda1720df79d3712be9961f16b9f205f">clone</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="modules/providers.h" line="119" column="16" bodyfile="modules/providers.h" bodystart="119" bodyend="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>CBaseRateProvider</label>
        <link refid="d1/d72/class_c_base_rate_provider"/>
      </node>
      <node id="1">
        <label>CConstantRateProvider</label>
        <link refid="d0/dfc/class_c_constant_rate_provider"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>CBaseRateProvider</label>
        <link refid="d1/d72/class_c_base_rate_provider"/>
      </node>
      <node id="1">
        <label>CConstantRateProvider</label>
        <link refid="d0/dfc/class_c_constant_rate_provider"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="modules/providers.h" line="81" column="1" bodyfile="modules/providers.h" bodystart="82" bodyend="126"/>
    <listofallmembers>
      <member refid="d1/d72/class_c_base_rate_provider_1a2640fc18faa82cba089cf6dda1c8cf9a" prot="public" virt="virtual"><scope>CConstantRateProvider</scope><name>add_risk_factor</name></member>
      <member refid="d0/dfc/class_c_constant_rate_provider_1a86eb352e6e96e3f58eca0148c281e96a" prot="public" virt="non-virtual"><scope>CConstantRateProvider</scope><name>CConstantRateProvider</name></member>
      <member refid="d0/dfc/class_c_constant_rate_provider_1af773f550cc46a4b6ced6fe0fa4d94f69" prot="public" virt="virtual"><scope>CConstantRateProvider</scope><name>clone</name></member>
      <member refid="d0/dfc/class_c_constant_rate_provider_1aadb2facf713091f863cd9fc990bb8ea9" prot="public" virt="virtual"><scope>CConstantRateProvider</scope><name>get_rate</name></member>
      <member refid="d0/dfc/class_c_constant_rate_provider_1a45d64417a6e005b311af9b036f736f92" prot="public" virt="virtual"><scope>CConstantRateProvider</scope><name>get_rates</name></member>
      <member refid="d1/d72/class_c_base_rate_provider_1ad03cbad78c88038d6645405a054ac2bf" prot="public" virt="non-virtual"><scope>CConstantRateProvider</scope><name>get_risk_factors</name></member>
      <member refid="d1/d72/class_c_base_rate_provider_1a0f28a513e31b1d6e12077a15830d6be8" prot="protected" virt="non-virtual"><scope>CConstantRateProvider</scope><name>risk_factors</name></member>
      <member refid="d0/dfc/class_c_constant_rate_provider_1ab73ff4c094a40bfbf3d504b36dedc1c8" prot="public" virt="virtual"><scope>CConstantRateProvider</scope><name>slice_into</name></member>
      <member refid="d0/dfc/class_c_constant_rate_provider_1ad60530a109967264a6e55ee5870a8f5e" prot="public" virt="virtual"><scope>CConstantRateProvider</scope><name>to_string</name></member>
      <member refid="d0/dfc/class_c_constant_rate_provider_1a31b0efd91d6f05a51a713852bf9a5e66" prot="protected" virt="non-virtual"><scope>CConstantRateProvider</scope><name>val</name></member>
      <member refid="d1/d72/class_c_base_rate_provider_1a13043f980594af17065853df0edba6a1" prot="public" virt="virtual"><scope>CConstantRateProvider</scope><name>~CBaseRateProvider</name></member>
      <member refid="d0/dfc/class_c_constant_rate_provider_1ae8a814a984b80c2542b0834f46cda53b" prot="public" virt="virtual"><scope>CConstantRateProvider</scope><name>~CConstantRateProvider</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
